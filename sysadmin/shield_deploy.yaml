# ansible-playbook -K shield_deploy.yaml   

- name: Shield Deployment Ansible Playbook
  hosts: vbox

  vars:
    SHIELD_DIR: /var/www/shield

  tasks:

# Clone project from GitHub

    - name: Cloning shield project from GitHub
      become: yes
      git:
        clone: yes
        repo: https://github.com/RoberHerraiz/shield.git
        dest: '{{ SHIELD_DIR }}'
        force: yes # aÃ±adido para que no falle al clonar el repo con cambios locales

# Virtual Env creation

    - name: Creating VirtualEnv
      become: yes
      command: python3 -m venv '{{ SHIELD_DIR }}/venv'


# Dependencies installation

    - name: Installing wheel
      become: yes
      pip:
        name: wheel
        virtualenv: '{{ SHIELD_DIR }}/venv'

    - name: Installing pip requirements
      become: yes
      pip:
        requirements: '{{ SHIELD_DIR }}/requirements.txt'
        virtualenv: '{{ SHIELD_DIR }}/venv'


# Migrations and data load

    - name: Making migrations - Django
      django_manage:
        command: makemigrations
        app_path: '{{ SHIELD_DIR }}'
        virtualenv: '{{ SHIELD_DIR }}/venv'

    - name: Migrate - Django
      django_manage:
        command: migrate
        app_path: '{{ SHIELD_DIR }}'
        virtualenv: '{{ SHIELD_DIR }}/venv'

    - name: Loading data - Django
      become: yes
      django_manage:
        command: loaddata
        fixtures: '{{ SHIELD_DIR }}/metahumans/dumpdata.json' 
        app_path: '{{ SHIELD_DIR }}'
        virtualenv: '{{ SHIELD_DIR }}/venv'


# Static optimization

    - name: Adding static config to Django settings
      become: yes
      shell: echo "STATIC_ROOT = os.path.join(BASE_DIR, '/static')" >> '{{ SHIELD_DIR }}/shield/settings.py'

    - name: Collecting static - Django
      become: yes
      django_manage:
        command: collectstatic
        app_path: '{{ SHIELD_DIR }}'
        virtualenv: '{{ SHIELD_DIR }}/venv'
      

# Adjust permissions

    - name: Change file permissions for www-data
      become: yes
      file:
        path: '{{ SHIELD_DIR }}'
        state: directory
        recurse: yes
        group: www-data
        owner: www-data


# uWSGI config

    - name: Installing uWSGI
      become: yes
      pip:
        name: uwsgi
        # virtualenv: '{{ SHIELD_DIR }}/venv'
    
    - name: Creating vassals directory
      become: yes
      file:
        path: /etc/uwsgi/vassals
        state: directory


# Vassal config

# 'uwsgi.ini' file was uploaded to github shield's project

    - name: Creating vassal directory
      become: yes
      file:
        path: '/var/log/uwsgi/'
        state: directory
        recurse: yes

    - name: Creating logto file and changing permissions
      become: yes
      file:
        path: '/var/log/uwsgi/shield.log'
        state: touch
        owner: www-data

    - name: Creating symlink to 
      become: yes
      file:
        src: '{{ SHIELD_DIR }}/uwsgi.ini'
        path: '/etc/uwsgi/vassals/shield.ini'
        state: link

# Emperor configuration

#'emperor.ini' and 'uwsgi-emperor.service' files were uploaded to github shield's project

    - name: Moving emperor.ini to /etc/uwsgi
      become: yes
      copy:
        remote_src: yes
        src: '{{ SHIELD_DIR }}/emperor.ini'
        dest: '/etc/uwsgi/'

    - name: Moving emperor service to /etc/systemd/system/
      become: yes
      copy:
        remote_src: yes
        src: '{{ SHIELD_DIR }}/uwsgi-emperor.service'
        dest: '/etc/systemd/system/'     

    - name: Reloading daemons
      become: yes
      systemd:
        daemon_reload: yes

    - name: Starting uwsgi-emperor service and making him start on boot
      become: yes
      service:
        name: uwsgi-emperor
        state: started
        # enabled: yes